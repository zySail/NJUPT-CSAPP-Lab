# 张益帆 B21150215

# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 

.align 8 
# Source block 
src: 
.quad 0x00a 
.quad 0x0b0 
.quad 0xc00 
# Destination block 
dest: 
.quad 0x111 
.quad 0x222 
.quad 0x333 

main:	
    irmovq src,%rdi
    irmovq dest,%rsi
	irmovq $3,%rdx
	call copy_block		# long copy_block(long *src, long *dest, long len)
	ret

copy_block:
    irmovq $8,%r8        # Constant 8
	irmovq $1,%r9	     # Constant 1
    xorq %rax,%rax       # result = 0
	andq %rdx,%rdx	     # Set CC
	jmp     test         # Goto test

loop:
    mrmovq (%rdi),%r10   # get val
    rmmovq %r10,(%rsi)   # copy val to (*dest)
	addq %r8,%rdi        # src++
    addq %r8,%rsi        # dest++
    xorq %r10,%rax       # result = result ^ val
	subq %r9,%rdx        # count--.  Set CC

test:
    jne    loop          # Stop when 0
	ret                  # Return

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
